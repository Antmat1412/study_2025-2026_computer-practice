---
## Author
author:
  name: Амуничников Антон Игоревич
  email: 1132227133@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6
## Title
title: "Отчет по лабораторной работе №3"
subtitle: "Компьютерный практикум по статистическому анализу данных"
license: "CC BY"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[math,RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---


# Цель работы

Основная цель работы -- освоить применение циклов функций и сторонних для Julia пакетов для решения задач линейной алгебры и работы с матрицами.

# Задание

1. Используя Jupyter Lab, повторите примеры из раздела 3.2.
2. Выполните задания для самостоятельной работы (раздел 3.4)

# Теоретическое введение

Julia -- высокоуровневый свободный язык программирования с динамической типизацией, созданный для математических вычислений [@julialang]. Эффективен также и для написания программ общего назначения. Синтаксис языка схож с синтаксисом других математических языков, однако имеет некоторые существенные отличия.

Для выполнения заданий была использована официальная документация Julia [@juliadoc].

# Выполнение лабораторной работы

Для начала выполним примеры из лабораторной работы, чтобы познакомиться с циклами, условными операторами, функциями и работой со сторонними библиотеками ([рис. @fig-001] - [рис. @fig-004]).

![Выполнение примеров с циклами](image/1.png){#fig-001 width=70%}

![Выполнение примеров с условными выражениями](image/2.png){#fig-002 width=70%}

![Выполнение примеров с функциями](image/3.png){#fig-003 width=70%}

![Выполнение примеров со сторонними библиотеками](image/4.png){#fig-004 width=70%}

Теперь перейдем к выполнению заданий для самостоятельной работы.

Используя циклы while и for ([рис. @fig-005]):

- выведем на экран целые числа от 1 до 100 и напечатаем их квадраты;
- создадим словарь squares, который будет содержать целые числа в качестве ключей и квадраты в качестве их пар-значений;
- создадим массив squares_arr, содержащий квадраты всех чисел от 1 до 100.

![Задание №1](image/5.png){#fig-005 width=70%}

Напишем условный оператор, который печатает число, если число чётное, и строку «нечётное», если число нечётное. Перепишем код, используя тернарный оператор ([рис. @fig-006]).

![Задание №2](image/6.png){#fig-006 width=70%}

Напишем функцию add_one, которая добавляет 1 к своему входу ([рис. @fig-007]).

![Задание №3](image/7.png){#fig-007 width=70%}

Используем map() или broadcast() для задания матрицы $A$, каждый элемент которой увеличивается на единицу по сравнению с предыдущим. ([рис. @fig-008])

![Задание №4](image/8.png){#fig-008 width=70%}

Зададим матрицу $A$. Найдем $A^3$. Заменим третий столбец матрицы $A$ на сумму второго и третьего столбцов ([рис. @fig-009]).

![Задание №5](image/9.png){#fig-009 width=70%}

Создадим матрицу $B$ с элементами $B_{i1} = 10$, $B_{i2} = -10$, $B_{i3} = 10$, $i = 1, 2, \dots, 15$. Вычислим матрицу $C = B^TB$ ([рис. @fig-010]).

![Задание №6](image/10.png){#fig-010 width=70%}

Создадим матрицу $Z$ размерности 6×6, все элементы которой равны нулю, и матрицу $E$, все элементы которой равны 1. Используя цикл while или for и закономерности расположения элементов, создадим следующие матрицы размерности 6×6 ([рис. @fig-011]).

![Задание №7](image/11.png){#fig-011 width=70%}

Напишем свою функцию, аналогичную функции outer() языка R. Функция должна иметь следующий интерфейс: `outer(x,y,operation)` ([рис. @fig-012]), ([рис. @fig-013]).

![Задание №8. Реализация функции outer(). Проверка работы функции](image/12.png){#fig-012 width=70%}

![Задание №8. Проверка работы функции outer()](image/13.png){#fig-013 width=70%}

Решим систему линейных уравнений с 5 неизвестными ([рис. @fig-014]).

![Задание №9. Решение систему линейных уравнений](image/14.png){#fig-014 width=70%}

В 10 задании произведем анализ количества элементов матрицы, удовлетворяющих необходимым условиям. Вычислим выражения ([рис. @fig-015]). 

![Задание №10. Задание №11](image/15.png){#fig-015 width=70%}

# Выводы

В резульатте выполнения данной лабораторной работы я освоил применение циклов функций и сторонних для Julia пакетов для решение задач линейной алегбры и работы с матрицами.